import pandas as pd 
import numpy as np 
import matplotlib.pyplot  as plt 
from sklearn.preprocessing  import StandardScaler 
from sklearn.decomposition  import PCA 

df  = pd.read_csv("wine.csv") 

X  = df.drop(columns=['Customer_Segment'])    # Features (measurements) 
y  = df['Customer_Segment']  

plt.figure(figsize=(10,  6)) 
plt.scatter(X[y  == 1]['Alcohol'],  X[y  == 1]['Malic_Acid'],  label='Customer  Segment  1',  alpha=0.7) 
plt.scatter(X[y  == 2]['Alcohol'],  X[y  == 2]['Malic_Acid'],  label='Customer  Segment  2',  alpha=0.7) 
plt.scatter(X[y  == 3]['Alcohol'],  X[y  == 3]['Malic_Acid'],  label='Customer  Segment  3',  alpha=0.7) 
plt.xlabel('Alcohol') 
plt.ylabel('Malic  Acid') 
plt.legend() 
plt.title('Scatter  Plot  (Original  Data)') 
plt.show()

scaler  = StandardScaler() 
X_scaled  = scaler.fit_transform(X) 

pca  = PCA(n_components=2) 
X_pca  = pca.fit_transform(X_scaled)

pca_df  = pd.DataFrame(data=X_pca,  columns=['Principal  Component  1',  'Principal  Component  2']) 
pca_df['Customer_Segment']  = y


plt.figure(figsize=(10, 6))

plt.scatter(pca_df[pca_df['Customer_Segment'] == 1]['Principal Component 1'], 
            pca_df[pca_df['Customer_Segment'] == 1]['Principal Component 2'], 
            label='Segment 1')
plt.scatter(pca_df[pca_df['Customer_Segment'] == 2]['Principal Component 1'], 
            pca_df[pca_df['Customer_Segment'] == 2]['Principal Component 2'], 
            label='Segment 2')
plt.scatter(pca_df[pca_df['Customer_Segment'] == 3]['Principal Component 1'], 
            pca_df[pca_df['Customer_Segment'] == 3]['Principal Component 2'], 
            label='Segment 3')

plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.legend()
plt.title('PCA: Wine Dataset')

plt.show()
